{
  "guides": [
    {
      "content": "{# Add newer items to the top of the array. Each item should include at least a date (in ISO format) and a version number. #}\r\n{% set versions = [\r\n  {\r\n    added: [\r\n      'Item 1',\r\n      'Item 2',\r\n    ],\r\n    changed: [\r\n      'Item 1',\r\n      'Item 2',\r\n    ],\r\n    fixed: [\r\n      'Item 1',\r\n      'Item 2',\r\n    ],\r\n    removed: [\r\n      'Item 1',\r\n      'Item 2',\r\n    ],\r\n    date: '2024-09-14',\r\n    version: '1.0.0',\r\n  },\r\n] %}\r\n\r\n{{ craft.guide.component('changelog', {\r\n  limit: guideDisplayArea == 'widget' ? 1 : null,\r\n  slug: 'changelog',\r\n  versions,\r\n}) }}",
      "contentCss": "",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "changelog",
      "summary": "",
      "template": "__none__",
      "title": "Changelog"
    },
    {
      "content": "<h1>CMS User Manual</h1>\r\n\r\n<p>This website was built using the Craft CMS content management system (CMS). While Craft makes content management easy and intuitive, this guide is here to help get you started and to answer a few questions you may have along the way.</p>\r\n\r\n<hr>\r\n\r\n<h2>Dashboard</h2>\r\n\r\n<grid grid-type=\"2-column\">\r\n    <div>\r\n        <p>The first thing you&rsquo;ll see when logging into Craft&rsquo;s Control Panel (CP) is the Dashboard. This page is home to helpful widgets that offer information about your website. The Dashboard is customizable for each user, so you may add, remove, and re-arrange the layout of the widgets you find most useful.</p>\r\n    </div>\r\n    <div>\r\n        <br>\r\n    </div>\r\n</grid>\r\n\r\n{% if plugin('admin-bar') %}\r\n    <hr>\r\n\r\n    {{ craft.guide.component('image', { asset: craft.assets.filename('Screenshot-2024-03-23-at-4.08.15-PM.png').volume('userPhotos').one(), modal: true }) }}\r\n\r\n    <h2>Admin Bar</h2>\r\n\r\n    <grid grid-type=\"2-column\">\r\n        <div>\r\n            <p>When logged in and visiting the front-end of the {{ craft.guide.var(\"clientName\") }} website, you&rsquo;ll see a shortcut bar along the top of the screen. Admin Bar helps you to quickly get back to the CP, to edit the current page, and to log out of the CMS.</p>\r\n            <p>The links in Admin Bar can be customized, so if you find yourself frequenting a page in the CP, a shortcut to that page can be added in Admin Bar&rsquo;s settings.</p>\r\n        </div>\r\n        <div>\r\n            {{ craft.guide.component('image', { asset: craft.assets.filename('Screenshot-2024-03-23-at-6.08.07-PM.png').volume('userPhotos').one(), modal: true }) }}\r\n        </div>\r\n    </grid>\r\n{% endif %}\r\n\r\n<hr>\r\n\r\n<h2>Guide</h2>\r\n\r\n<p>Your CMS Guides is built within the Craft CP and can be accessed in three different ways:</p>\r\n\r\n<grid grid-type=\"3-column\">\r\n    <div>\r\n        <h3>Dashboard Widgets</h3>\r\n        <p>Guides can be shown on your dashboard by adding a new Guide widget and selecting the guide that you would like to display.</p>\r\n    </div>\r\n    <div>\r\n        <h3>Guide CP Section</h3>\r\n        <p>The Guide link in the CP sidebar takes you to your CMS guide pages. The Guide sidebar menu lets you navigate the different pages and sections in your guide.</p>\r\n    </div>\r\n    <div>\r\n        <h3>Edit Pages</h3>\r\n        <p>When editing entries, categories, and users, a list of guides will appear in the right-hand sidebar. Clicking on a guide title will pop the guide up in a modal so you can refer back to it without leaving the page you are in the progress of editing.</p>\r\n    </div>\r\n</grid>",
      "contentCss": "",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "cms-user-manual",
      "summary": "Page imported from Guide 4 install on a different site.",
      "template": "__none__",
      "title": "CMS User Manual"
    },
    {
      "content": "<div class=\"guide-snippet-content-stats\">\r\n  {{ craft.guide.component('content-stats') }}\r\n  \r\n  {{ craft.guide.component('content-stats', { type: 'assets' }) }}\r\n\r\n  {{ craft.guide.component('content-stats', { type: 'categories' }) }}\r\n\r\n  {{ craft.guide.component('content-stats', { type: 'users' }) }}\r\n</div>\r\n\r\n{{ craft.guide.component('audio', { src: 'REPLACE_URL' }) }}\r\n\r\n{{ craft.guide.component('button', { label: 'REPLACE_LABEL', url: url('REPLACE_URL') }) }}\r\n\r\n{{ craft.guide.component('image', { url: 'REPLACE_URL' }) }}\r\n\r\n{% apply markdown('gfm') %}\r\n\r\n## Heading\r\n\r\nContent\r\n\r\n{% endapply %}\r\n\r\n{{ craft.guide.component('table', {\r\n  footers: ['REPLACE_TEXT', 'REPLACE_TEXT', 'REPLACE_TEXT'],\r\n  headers: ['REPLACE_TEXT', 'REPLACE_TEXT', 'REPLACE_TEXT'],\r\n  rows: [\r\n    ['REPLACE_TEXT', 'REPLACE_TEXT', 'REPLACE_TEXT'],\r\n    ['REPLACE_TEXT', 'REPLACE_TEXT', 'REPLACE_TEXT'],\r\n    ['REPLACE_TEXT', 'REPLACE_TEXT', 'REPLACE_TEXT'],\r\n  ],\r\n}) }}\r\n\r\n{{ craft.guide.component('guide-button', { slug: 'javascript-test' }) }}\r\n\r\n{{ craft.guide.component('guide-button', { label: 'Broken Button', slug: 'javascript-test---' }) }}\r\n\r\n{{ craft.guide.component('tip', { text: 'REPLACE_TEXT' }) }}\r\n\r\n{% set detailsContent %}{% apply markdown('gfm') %}\r\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Aut doloribus ducimus eligendi eum facilis fuga laboriosam libero, magni mollitia necessitatibus nisi nulla optio repellat unde ut? Doloribus perferendis quos voluptas!\r\n{% endapply %}{% endset %}\r\n{{ craft.guide.component('details', { content: detailsContent }) }}\r\n\r\n<p>{{ craft.guide.var('clientName') }}</p>\r\n\r\n<p>{{ craft.guide.var('myCompanyName') }}</p>\r\n\r\n<p>{{ craft.guide.var('projectName') }}</p>\r\n\r\n{{ craft.guide.component('video', { source: 'vimeo', videoId: 'REPLACE_VIDEO_ID' }) }}\r\n\r\n{{ craft.guide.component('warning', { text: 'REPLACE_TEXT' }) }}\r\n\r\n{{ craft.guide.component('video', { source: 'youtube', videoId: 'REPLACE_VIDEO_ID' }) }}\r\n\r\n---\r\n\r\n{{ craft.guide.component('image', { asset: craft.assets.filename('Screenshot-2024-03-23-at-4.08.15-PM.png').volume('userPhotos').one(), modal: true }) }}\r\n\r\n{{ craft.guide.component('image', { asset: craft.assets.filename('Screenshot-2024-03-26-at-8.42.30-PM.png').volume('userPhotos').one(), modal: true }) }}\r\n\r\n{{ craft.guide.component('image', { asset: craft.assets.filename('Screenshot-2024-03-23-at-6.08.07-PM.png').volume('userPhotos').one(), modal: true }) }}\r\n\r\n---\r\n\r\n{{ craft.guide.include({ slug: 'markdown-guide' }) }}\r\n\r\n---\r\n\r\n{# VERSION START  For each version, make a copy of this block and place it at the top of this guide. #}\r\n{% set version %}\r\n<div class=\"version\">\r\n  <h2 class=\"g-mb-6\"><span>1.0.0</span> Aug 27, 2021</h2>\r\n<div class=\"g-prose g-prose-sm\">\r\n{% apply markdown('gfm') %}\r\n\r\n### &#x1F680; Added\r\n\r\n- Features that have been added.\r\n\r\n### &#x1F527; Changed\r\n\r\n- Things that have changed.\r\n\r\n### &#x1F6A7; Fixed\r\n\r\n- Bugs that have been fixed.\r\n\r\n### &#x1F525; Deleted\r\n\r\n- Features that have been removed.\r\n\r\n{% endapply %}\r\n</div>\r\n</div>\r\n{% endset %}\r\n{% set versions = versions is defined ? versions|merge([version]) : [version] %}\r\n{# VERSION END #}\r\n\r\n{# -------------------------------------------------------------------------- #}\r\n\r\n{# Display changelog versions #}\r\n<div>\r\n  {% if guideDisplayArea == 'widget' %}\r\n    {{ versions[0] }}\r\n  {% else %}\r\n    {% for version in versions %}\r\n      {{ version }}\r\n    {% endfor %}\r\n  {% endif %}\r\n</div>\r\n\r\n{% if guideDisplayArea == 'widget' %}\r\n  {{ craft.guide.component('button', { label: 'See all changes', url: url('guide/page/' ~ guide.slug) }) }}\r\n{% endif %}\r\n\r\n{% css %}\r\n.guide-{{ guide.slug }} .version + .version {\r\n  margin-top: 3rem;\r\n  padding-top: 3rem;\r\n  border-top: 1px solid rgba(0,0,0,0.2);\r\n}\r\n.guide-{{ guide.slug }} .version h2 span {\r\n  font-size: 2rem;\r\n}\r\n{% endcss %}",
      "contentCss": ".guide-component-test {\r\n  & .guide-snippet-content-stats {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    gap: var(--xl);\r\n\r\n    & > * {\r\n      flex: 1 1 200px;\r\n      padding: var(--l);\r\n      border-radius: var(--guide-border-radius);\r\n      background-color: color-mix(in srgb, var(--guide-color-blue-bg), transparent 92%);\r\n    }\r\n  }\r\n}",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "component-test",
      "summary": "Test all of Guideâ€™s Twig components.",
      "template": "__none__",
      "title": "Component Test"
    },
    {
      "content": "{# Set the asset volume you would like to check for images in. #}\r\n{% set volume = null %}\r\n\r\n{% set limit = 100 %}\r\n\r\n{# Display a contact sheet of assets along with their title and alt text. #}\r\n{% set query = craft.assets.limit(limit).volume(volume ?? null).kind('image') %}\r\n{% paginate query as pageInfo, assets %}\r\n\r\n{% if assets|length %}\r\n  {% if guideDisplayArea in ['guide', 'page'] and (pageInfo.prevUrl or pageInfo.nextUrl) %}\r\n    <header>\r\n      {% if pageInfo.prevUrl %}\r\n        {{ craft.guide.component('button', { label: 'Previous Page', url: pageInfo.prevUrl }) }}\r\n      {% endif %}\r\n      <span>{{ pageInfo.currentPage }} / {{ pageInfo.totalPages }}</span>\r\n      {% if pageInfo.nextUrl %}\r\n        {{ craft.guide.component('button', { label: 'Next Page', url: pageInfo.nextUrl }) }}\r\n      {% endif %}\r\n    </header>\r\n  {% endif %}\r\n\r\n  <ul>\r\n  {% for asset in assets %}\r\n    <li>\r\n      {{ craft.guide.component('image', { asset, modal: true, transforms: [\r\n        { mode: 'fit', quality: 80, width: 430 },\r\n        { mode: 'fit', quality: 80, width: 860 },\r\n      ] }) }}\r\n      {% set assetInfo = [\r\n        ['Title', asset.title ?? ''],\r\n        ['Alt', asset.alt ?? ''],\r\n        ['Size', asset.width ?? '' ~ ' x ' ~ asset.height ?? ''],\r\n      ] %}\r\n      <dl>\r\n        {% for item in assetInfo %}\r\n        <dt>{{ item[0] }}</dt>\r\n        <dd>{{ item[1] }}</dd>\r\n        {% endfor %}\r\n      </dl>\r\n    </li>\r\n  {% endfor %}\r\n  </ul>\r\n{% else %}\r\n{% apply markdown('gfm') %}\r\n\r\nNo images were found for this asset volume.\r\n\r\n{% endapply %}\r\n{% endif %}",
      "contentCss": ".guide.guide-contact-sheet-images {\r\n    & header {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: var(--m);\r\n        padding: var(--s) var(--padding);\r\n        margin-inline: calc(-1 * var(--padding));\r\n        position: sticky;\r\n        top: var(--header-height);\r\n        background-color: rgba(255, 255, 255, 0.8);\r\n        backdrop-filter: blur(10px);\r\n        z-index: 1;\r\n    }\r\n    & ul {\r\n        --grid-template-columns: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(var(--grid-template-columns, 1), 1fr);\r\n        grid-auto-rows: max-content;\r\n        gap: calc(var(--xl) * 2);\r\n\r\n        & li {\r\n            display: grid;\r\n            grid-template-columns: auto;\r\n            grid-template-rows: subgrid;\r\n            grid-row: span 2;\r\n            gap: var(--s);\r\n            margin-left: 0;\r\n            list-style: none;\r\n\r\n            & figure {\r\n                align-self: flex-end;\r\n            }\r\n        }\r\n\r\n        @container guide-display (width > 600px) {\r\n            --grid-template-columns: 2;\r\n        }\r\n        @container guide-display (width > 900px) {\r\n            --grid-template-columns: 3;\r\n        }\r\n        @container guide-display (width > 1200px) {\r\n            --grid-template-columns: 4;\r\n        }\r\n        @container guide-display (width > 1800px) {\r\n            --grid-template-columns: 5;\r\n        }\r\n    }\r\n    & dl {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        column-gap: var(--m);\r\n        padding-block-start: var(--s);\r\n        border-block-start: 1px solid var(--hairline-color);\r\n        font-size: 1rem;\r\n\r\n        & dt {\r\n            font-weight: 700;\r\n        }\r\n        & dd {\r\n            text-wrap: balance;\r\n        }\r\n    }\r\n}",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "contact-sheet-images",
      "summary": "",
      "template": "__none__",
      "title": "Contact Sheet â€“Â Images"
    },
    {
      "content": "<div class=\"guide-snippet-content-stats\">\r\n  {{ craft.guide.component('content-stats') }}\r\n\r\n  {{ craft.guide.component('content-stats', { type: 'assets' }) }}\r\n\r\n  {{ craft.guide.component('content-stats', { type: 'categories' }) }}\r\n\r\n  {{ craft.guide.component('content-stats', { type: 'users' }) }}\r\n</div>",
      "contentCss": ".guide.guide-content-stats-all {\r\n  & .guide-snippet-content-stats {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    gap: var(--xl);\r\n\r\n    & > * {\r\n      flex: 1 1 200px;\r\n      padding: var(--l);\r\n      border-radius: var(--guide-border-radius);\r\n      background-color: color-mix(in srgb, var(--gray-100), transparent 50%);\r\n    }\r\n  }\r\n}",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "content-stats-all",
      "summary": "",
      "template": "__none__",
      "title": "Content Stats â€“Â All"
    },
    {
      "content": "{% if user ?? false %}\r\n  <p>There is a user here and their username is <em>{{ user.username ?? 'NOT SET' }}</em>.</p>\r\n{% elseif element ?? false %}\r\n  <p>There is an element here and its title is <em>{{ element.title ?? 'NOT SET' }}</em>.</p>\r\n{% else %}\r\n  <p>There is no element here.</p>\r\n{% endif %}",
      "contentCss": "",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "element-test",
      "summary": "Test to see if `element` or `user` are passed into a guide.",
      "template": "__none__",
      "title": "Element Test"
    },
    {
      "content": "Im a guide that is just sitting here in `{{ guideDisplayArea }}`\r\n\r\n{# elementEdit\r\nguide\r\npage\r\nwidget\r\nuiElement\r\nuri #}",
      "contentCss": ".guide-display-area-test {\r\n    background-color: rgb(239, 171, 253);\r\n\r\n    .guide-display-area-slideout & {\r\n        background-color: burlywood;\r\n    }\r\n}",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "display-area-test",
      "summary": "Check that all `guideDisplayArea` variables work.",
      "template": "__none__",
      "title": "Display Area Test"
    },
    {
      "content": "This should show an error: {{ blah }}",
      "contentCss": "",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "error-guide",
      "summary": "Show error handling in a guide.",
      "template": "__none__",
      "title": "Error Guide"
    },
    {
      "content": "GitHub Flavored Markdown\r\n================================\r\n\r\n*View the [source of this content](http://github.github.com/github-flavored-markdown/sample_content.html).*\r\n\r\nLet's get the whole \"linebreak\" thing out of the way. The next paragraph contains two phrases separated by a single newline character:\r\n\r\nRoses are red\r\nViolets are blue\r\n\r\nThe next paragraph has the same phrases, but now they are separated by two spaces and a newline character:\r\n\r\nRoses are red  \r\nViolets are blue\r\n\r\nOh, and one thing I cannot stand is the mangling of words with multiple underscores in them like perform_complicated_task or do_this_and_do_that_and_another_thing.\r\n\r\nA bit of the GitHub spice\r\n-------------------------\r\n\r\nIn addition to the changes in the previous section, certain references are auto-linked:\r\n\r\n* SHA: be6a8cc1c1ecfe9489fb51e4869af15a13fc2cd2\r\n* User@SHA ref: mojombo@be6a8cc1c1ecfe9489fb51e4869af15a13fc2cd2\r\n* User/Project@SHA: mojombo/god@be6a8cc1c1ecfe9489fb51e4869af15a13fc2cd2\r\n* \\#Num: #1\r\n* User/#Num: mojombo#1\r\n* User/Project#Num: mojombo/god#1\r\n\r\nThese are dangerous goodies though, and we need to make sure email `addresses` don't get mangled:\r\n\r\nMy email addy is tom@github.com.\r\n\r\nMath is hard, let's go shopping\r\n-------------------------------\r\n\r\nIn first grade I learned that 5 > 3 and 2 < 7. Maybe some arrows. 1 -> 2 -> 3. 9 <- 8 <- 7.\r\n\r\nTriangles man! a^2 + b^2 = c^2\r\n\r\nWe all like making lists\r\n------------------------\r\n\r\nThe above header should be an H2 tag. Now, for a list of fruits:\r\n\r\n* Red Apples\r\n* Purple Grapes\r\n* Green Kiwifruits\r\n\r\nLet's get crazy:\r\n\r\n1.  This is a list item with two paragraphs. Lorem ipsum dolor\r\n    sit amet, consectetuer adipiscing elit. Aliquam hendrerit\r\n    mi posuere lectus.\r\n\r\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet\r\n    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\r\n    sit amet velit.\r\n\r\n2.  Suspendisse id sem consectetuer libero luctus adipiscing.\r\n\r\nWhat about some code **in** a list? That's insane, right?\r\n\r\n1. In Ruby you can map like this:\r\n\r\n        ['a', 'b'].map { |x| x.uppercase }\r\n\r\n2. In Rails, you can do a shortcut:\r\n\r\n        ['a', 'b'].map(&:uppercase)\r\n\r\nSome people seem to like definition lists\r\n\r\n<dl>\r\n  <dt>Lower cost</dt>\r\n  <dd>The new version of this product costs significantly less than the previous one!</dd>\r\n  <dt>Easier to use</dt>\r\n  <dd>We've changed the product so that it's much easier to use!</dd>\r\n</dl>\r\n\r\nI am a robot\r\n------------\r\n\r\n```\r\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque dignissimos enim est hic iusto praesentium qui soluta, voluptate voluptatem? Explicabo nihil, rerum? Asperiores debitis error ipsa nulla qui repellat sunt.</p>\r\n```\r\n\r\nMaybe you want to print `robot` to the console 1000 times. Why not?\r\n\r\n    def robot_invasion\r\n      puts(\"robot \" * 1000)\r\n    end\r\n\r\nYou see, that was formatted as code because it's been indented by four spaces.\r\n\r\nHow about we throw some angle braces and ampersands in there?\r\n\r\n    <div class=\"footer\">\r\n        &copy; 2004 Foo Corporation\r\n    </div>\r\n\r\nSet in stone\r\n------------\r\n\r\nPreformatted blocks are useful for ASCII art:\r\n\r\n<pre>\r\n             ,-. \r\n    ,     ,-.   ,-. \r\n   / \\   (   )-(   ) \r\n   \\ |  ,.>-(   )-< \r\n    \\|,' (   )-(   ) \r\n     Y ___`-'   `-' \r\n     |/__/   `-' \r\n     | \r\n     | \r\n     |    -hrr- \r\n  ___|_____________ \r\n</pre>\r\n\r\nPlaying the blame game\r\n----------------------\r\n\r\nIf you need to blame someone, the best way to do so is by quoting them:\r\n\r\n> I, at any rate, am convinced that He does not throw dice.\r\n\r\nOr perhaps someone a little less eloquent:\r\n\r\n> I wish you'd have given me this written question ahead of time so I\r\n> could plan for it... I'm sure something will pop into my head here in\r\n> the midst of this press conference, with all the pressure of trying to\r\n> come up with answer, but it hadn't yet...\r\n>\r\n> I don't want to sound like\r\n> I have made no mistakes. I'm confident I have. I just haven't - you\r\n> just put me under the spot here, and maybe I'm not as quick on my feet\r\n> as I should be in coming up with one.\r\n\r\nTable for two\r\n-------------\r\n\r\n|ID|Name|Rank|\r\n|---|---|---|\r\n|1|Tom Preston-Werner|Awesome|\r\n|2|Albert Einstein|Nearly as awesome|\r\n\r\nCrazy linking action\r\n--------------------\r\n\r\nI get 10 times more traffic from [Google] [1] than from\r\n[Yahoo] [2] or [MSN] [3].\r\n\r\n  [1]: http://google.com/        \"Google\"\r\n  [2]: http://search.yahoo.com/  \"Yahoo Search\"\r\n  [3]: http://search.msn.com/    \"MSN Search\"",
      "contentCss": "",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "github-example",
      "summary": "Markdown example from a GitHub gist.",
      "template": "__none__",
      "title": "Github Example"
    },
    {
      "content": "{{ craft.guide.include({ slug: 'javascript-test' }) }}\r\n\r\n{{ craft.guide.include({ slug: 'github-example' }) }}\r\n",
      "contentCss": "",
      "contentJavascript": "window.guideCallback['javascript-test']?.()",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "guide-include-test",
      "summary": "Test the `include` guide function.",
      "template": "__none__",
      "title": "Guide Include Test"
    },
    {
      "content": "{% set pageParam = 'guide-REPLACE_GUIDE_SLUG' %}\r\n{% set currentPage = craft.app.request.queryParams[pageParam] ?? 1 %}\r\n\r\n<div class=\"buttons\">\r\n    {% if currentPage > 1 %}\r\n        {% set previousPageParams = craft.app.request.queryParams|merge({ (pageParam): currentPage|integer - 1 }) %}\r\n\r\n        {{ craft.guide.component('button', { label: 'Previous Page', url: cpUrl(craft.app.request.getSegments|join('/'), previousPageParams) }) }}\r\n    {% endif %}\r\n\r\n    {% set nextPageParams = craft.app.request.queryParams|merge({ (pageParam): currentPage|integer + 1 }) %}\r\n\r\n    {{ craft.guide.component('button', { label: 'Next Page', url: cpUrl(craft.app.request.getSegments|join('/'), nextPageParams) }) }}\r\n</div>",
      "contentCss": "",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "guide-page-test",
      "summary": "",
      "template": "__none__",
      "title": "Guide Page Test"
    },
    {
      "content": "",
      "contentCss": "",
      "contentJavascript": "",
      "contentSource": "iframe",
      "contentUrl": "https://craftcms.com/docs/5.x/system/relations.html",
      "renderMarkdown": "true",
      "slug": "iframe-test",
      "summary": "Test that an iframe is shown when the Content Source is External Page.",
      "template": "__none__",
      "title": "iFrame Test"
    },
    {
      "content": "<div class=\"content-pane\">\r\n    <p>Importing works!</p>\r\n</div>",
      "contentCss": ".guide-import-test {\r\n    & .content-pane {\r\n        padding: var(--m);\r\n    }\r\n}",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "import-test",
      "summary": "Does importing work when the DB structure has changed?",
      "template": "__none__",
      "title": "Import Test"
    },
    {
      "content": "<p class=\"my-custom-element\">This is a regular paragraph that should have white text.</p>",
      "contentCss": ".my-custom-element {\r\n    background-color: red;\r\n    color: rgb(255, 238, 0);\r\n}",
      "contentJavascript": "const guides = document.querySelectorAll('.guide-javascript-test:not(.loaded)')\r\n\r\nguides.forEach((guide) => {\r\n  const textElement = guide.querySelector('.my-custom-element')\r\n\r\n  if (textElement) {\r\n    textElement.style.color = 'white'\r\n    guide.classList.add('loaded')\r\n    console.log('firedd it sdafasdf asd fasd fasdf asdf asfsa fas fsa fas fsa f ')\r\n  }\r\n})",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "javascript-test",
      "summary": "Test the JavaScript callback.",
      "template": "__none__",
      "title": "JavaScript Test"
    },
    {
      "content": "Selected column: {{ element.layout.selectedColumns[0] }}",
      "contentCss": "",
      "contentJavascript": "",
      "contentSource": "template",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "little-layout-test",
      "summary": "A UI Element tester for Little Layout Fields",
      "template": "little-layout-test.twig",
      "title": "Little Layout Test"
    },
    {
      "content": "## New Guide\r\n\r\nThis was a new guide.\r\n\r\n- It's new\r\n- It's cool\r\n- It's in Markdown and {{ 'Twig' }}",
      "contentCss": "",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "markdown-guide",
      "summary": "",
      "template": "__none__",
      "title": "Markdown Guide"
    },
    {
      "content": "{# Set the type of element to be displayed. Options: assets, categories, entries, users #}\r\n{% set elementType = 'entries' %}\r\n\r\n{# If showing content stats for entries, specifcy the section; for assets, the volume, or for categories, the group. #}\r\n{# Leave this as null to get all entries, assets, or category groups. #}\r\n{% set subType = null %}\r\n\r\n{# Set a label that sits under the total number. Leave this as blank to default to the element type. #}\r\n{% set label = null %}\r\n\r\n{% if elementType == 'assets' %}\r\n  {% set labelDefault = 'Assets' %}\r\n  {% set statuses = ['live'] %}\r\n  {% set live = craft.assets.limit(null).volume(subType ?? null).status('live').count() %}\r\n{% elseif elementType == 'categories' %}\r\n  {% set labelDefault = 'Categories' %}\r\n  {% set statuses = ['live', 'disabled'] %}\r\n  {% set live = craft.categories.limit(null).group(subType ?? null).status('enabled').count() %}\r\n  {% set disabled = craft.categories.limit(null).group(subType ?? null).status('disabled').count() %}\r\n{% elseif elementType == 'entries' %}\r\n  {% set labelDefault = 'Entries' %}\r\n  {% set statuses = ['live', 'disabled', 'pending', 'expired'] %}\r\n  {% set live = craft.entries.limit(null).section(subType ?? null).status('live').count() %}\r\n  {% set disabled = craft.entries.limit(null).section(subType ?? null).status('disabled').count() %}\r\n  {% set pending = craft.entries.limit(null).section(subType ?? null).status('pending').count() %}\r\n  {% set expired = craft.entries.limit(null).section(subType ?? null).status('expired').count() %}\r\n{% elseif elementType == 'users' %}\r\n  {% set labelDefault = 'Users' %}\r\n  {% set statuses = ['live', 'disabled'] %}\r\n  {% set live = craft.users.limit(null).status('enabled').count() %}\r\n  {% set disabled = craft.users.limit(null).status('disabled').count() %}\r\n{% endif %}\r\n\r\n<div class=\"guide-snippet-content-stats-header\">\r\n  <div><b>{{ live|default('') }}</b></div>\r\n  <div>{{ label|default(labelDefault) }}</div>\r\n</div>\r\n\r\n<div class=\"guide-snippet-content-stats-body\">\r\n  {% if 'live' in statuses %}\r\n    <div class=\"element small hasstatus\" title=\"Live elements\"><span class=\"status live\"></span><span class=\"label\"><span class=\"title\">Live</span></span></div>\r\n    <div><b>{{ live }}</b></div>\r\n  {% endif %}\r\n\r\n  {% if 'disabled' in statuses %}\r\n    <div class=\"element small hasstatus\" title=\"Disabled elements\"><span class=\"status disabled\"></span><span class=\"label\"><span class=\"title\">Disabled</span></span></div>\r\n    <div><b>{{ disabled }}</b></div>\r\n  {% endif %}\r\n\r\n  {% if 'pending' in statuses %}\r\n    <div class=\"element small hasstatus\" title=\"Pending elements\"><span class=\"status pending\"></span><span class=\"label\"><span class=\"title\">Pending</span></span></div>\r\n    <div><b>{{ pending }}</b></div>\r\n  {% endif %}\r\n\r\n  {% if 'expired' in statuses %}\r\n    <div class=\"element small hasstatus\" title=\"Expired elements\"><span class=\"status expired\"></span><span class=\"label\"><span class=\"title\">Expired</span></span></div>\r\n    <div><b>{{ expired }}</b></div>\r\n  {% endif %}\r\n</div>",
      "contentCss": ".guide-snippet-test {\r\n    & .guide-snippet-content-stats-header {\r\n        margin-inline: auto;\r\n        text-align: center;\r\n\r\n        & div:first-child {\r\n            font-size: 5rem;\r\n            line-height: .9em;\r\n        }\r\n        & div:last-child {\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n    & .guide-snippet-content-stats-body {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        align-items: center;\r\n        gap: var(--l);\r\n        margin-inline: auto;\r\n\r\n        & .element + div {\r\n            font-size: 1.7rem;\r\n            text-align: right;\r\n        }\r\n    }\r\n}",
      "contentJavascript": "",
      "contentSource": "field",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "snippet-test",
      "summary": "Tests Guide snippets.",
      "template": "__none__",
      "title": "Snippet Test"
    },
    {
      "content": "",
      "contentCss": "",
      "contentJavascript": "",
      "contentSource": "template",
      "contentUrl": "",
      "renderMarkdown": "true",
      "slug": "template-test",
      "summary": "Test getting a guide from a Twig template.",
      "template": "hello.twig",
      "title": "Template Test"
    }
  ]
}