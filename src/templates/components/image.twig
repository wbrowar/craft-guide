{% extends 'guide/_partials/render_component.twig' %}

{% set element = 'figure' %}

{# Variables #}
{% set asset = asset ?? null %}
{% set caption = caption ?? null %}
{% set placeholder = placeholder ?? (asset ?? false ? asset.url : '') %}
{% set sizes = sizes ?? '100vw' %}
{% set src = src ?? url ?? null %}

{% set alt = alt ?? image.title ?? '' %}
{% set transforms = transforms ?? [
  { mode: 'fit', quality: 85, width: 900 },
  { mode: 'fit', quality: 85, width: 1800 },
] %}

{% block content -%}
  {% import _self as self %}

  {% if asset ?? false or src ?? false %}
    {% set imageModalId = asset ?? false ? 'modal-image-' ~ asset.id : 'modal-' ~ (src ?? '')|kebab %}
    {% if modal ?? false %}<guide-image-modal>{% endif %}
      <picture>
        {% if asset ?? false %}
          {% if transforms|length %}
            <img srcset="{{ self.getSrcSetFromObject({ image: asset, transforms: transforms }) }}" src="{{ placeholder }}" loading="lazy" width="{{ asset.width }}" height="{{ asset.height }}" sizes="{{ sizes }}" alt="{{ alt ?? asset.title }}" />
          {% else %}
            <img src="{{ asset.url }}" loading="lazy" width="{{ asset.width }}" height="{{ asset.height }}" alt="{{ alt ?? asset.title }}" />
          {% endif %}
        {% elseif src ?? false %}
          <img src="{{ src }}" loading="lazy" alt="{{ alt }}" />
        {% endif %}
      </picture>
    {% if modal ?? false %}
      <div class="hidden">
        <div id="{{ imageModalId }}" class="guide-image-modal modal">
          <div id="modal">
            <img data-src="{{ asset ?? false ? asset.url : (src ?? '') }}" />
          </div>
        </div>
      </div>
    </guide-image-modal>{% endif %}
    {% if caption ?? false -%}
      <figcaption class="{{ rootClass }}__caption">{{ caption }}</figcaption>
    {%- endif %}
  {% else %}
    <div class="fpo" style="padding: 30% 0;">
      <p style="text-align: center;">An asset is missing. Update your guide template with a valid asset or image URL.</p>
    </div>
  {%- endif %}
{%- endblock %}

{% macro getSrcSetFromObject(options) %}{% apply spaceless %}
  {% set image = options.image ?? null %}
  {% set transforms = options.transforms ?? {} %}
  {% set suffix = options.suffix ?? null %}

  {% if (image ?? false) and (transforms|length) %}
    {% for transform in transforms %}{% if not loop.first %}, {% endif %}{{ image.getUrl(transform) }}{{ suffix }}{{ (transform.width ?? false) ? ' ' ~ transform.width ~ 'w' : '' }}{% endfor %}
  {% endif %}
{% endapply %}{% endmacro %}
