{# /**
 * Guide plugin for Craft CMS
 *
 * Guide Edit Page
 *
 * @author    Will Browar
 * @copyright Copyright (c) 2019 Will Browar
 * @link      https://wbrowar.com
 * @package   Guide
 * @since     2.0.0
 */ #}

{% extends "_layouts/cp" %}
{% import "_includes/forms" as forms %}
{% import "codeeditor/codeEditor" as codeEditor %}

{# The title of this CP section #}
{% set title = title ?? "Guide Edit"|t('guide') %}

{# The selected CP subnav item #}
{% set selectedSubnavItem = 'list' %}

{% if not (guide is defined) %}
  {% if (guideId ?? false) %}
    {% set guide = craft.guide.getOne({ id: guideId }) %}
    {% set isNew = false %}
  {% else %}
    {% set title = "New Guide"|t('guide') %}
    {% set guide = craft.guide.getAll([], 'new') %}
    {% set isNew = true %}
  {% endif %}
{% endif %}

{% set cpTrigger = craft.app.config.general.cpTrigger %}
{% set fullPageForm = true %}

{% set tabs = {
  "content": {label: "Content"|t('guide'), url: "#guide"},
} %}
{% if proEdition %}
  {% if settings.enableGuideCss %}
    {% set tabs = tabs|merge({
      "css": {label: "CSS"|t('guide'), url: "#css"},
    }) %}
  {% endif %}

  {% if settings.enableGuideJavascript %}
    {% set tabs = tabs|merge({
      "javascript": {label: "JavaScript"|t('guide'), url: "#javascript"},
    }) %}
  {% endif %}
{% endif %}

{% set fullPageForm = true %}

{% block actionButton %}
  <input class="btn submit" type="submit" value="Save">
{% endblock %}

{% set tMessages = {
  'components': 'Components'|t('guide'),
  'images': 'Images'|t('guide'),
  'guides': 'Guides'|t('guide'),
  'settings': 'Settings'|t('guide'),
  'snippets': 'Snippets'|t('guide'),
} %}

{% set content %}
  <input type="hidden" name="action" value="guide/guide/save-guide" />
  <input type="hidden" name="authorId" value="{{ guide.authorId ?? currentUser.id }}" />

  {% if guideId ?? false %}
    <input type="hidden" name="id" value="{{ guideId }}" />
  {% endif %}

  {% set redirect = craft.app.request.param('return') ?? false ? craft.app.request.param('return') : null %}
  {% if redirect ?? false %}
    <input type="hidden" name="redirect" value="{{ redirect }}" />
  {% endif %}

  <div id="guide" class="guide-editor">
    <guide-editor
        {{ isNew ? ' is-new' : '' }}
        t-messages="{{ tMessages|json_encode }}"
    >
      <div slot="settings">
        {{ forms.textField({
          label: 'Title'|t('guide'),
          id: 'title',
          name: 'title',
          required: true,
          value: guide.title,
        }) }}

        {{ forms.textField({
          label: 'Slug'|t('guide'),
          id: 'slug',
          name: 'slug',
          required: true,
          value: guide.slug,
          instructions: 'Used to import one guide into another.'|t('guide'),
        }) }}

        {{ forms.textField({
          label: 'Summary'|t('guide'),
          id: 'summary',
          name: 'summary',
          value: guide.summary,
          instructions: 'An internal note about the purpose of this guide.'|t('guide'),
        }) }}

        {% set options = [
          { label: 'Code Editor'|t('guide'), value: 'field' },
          { label: 'Twig Template'|t('guide'), value: 'template' },
          { label: 'External Page (iframe)'|t('guide'), value: 'iframe' },
        ] %}
        {{ forms.selectField({
          label: 'Content Source'|t('guide'),
          id: 'contentSource',
          name: 'contentSource',
          disabled: not proEdition,
          options: options,
          value: proEdition ? guide.contentSource : 'template',
        }) }}

        {{ forms.lightswitchField({
          label: 'Render Markdown'|t('guide'),
          id: 'renderMarkdown',
          name: 'renderMarkdown',
          disabled: not proEdition,
          options: options,
          on: isNew ? settings.renderMarkdownDefault : guide.renderMarkdown,
        }) }}

        {{ forms.textField({
          label: 'Page URL'|t('guide'),
          id: 'contentUrl',
          name: 'contentUrl',
          disabled: not proEdition,
          value: guide.contentUrl,
          instructions: 'A URL that is loaded in an iframe.'|t('guide'),
        }) }}

        {% if not proEdition %}
          <div class="readable">
            <blockquote class="note warn">
              <strong>{{ 'Template Path is Required'|t('guide') }}</strong>
              <p>{{ 'A Template Path is needed to load guides in the LITE edition of Guide.'|t('guide') }}</p>
              <p>
                <a class="go" href="{{ cpUrl('guide/settings') }}">{{ 'Set a Template Path in Guide Settings.'|t('guide') }}</a>
              </p>
            </blockquote>
          </div>
        {% endif %}

        {{ forms.selectField({
          label: 'Page Template'|t('guide'),
          id: 'template',
          name: 'template',
          disabled: not settings.templatePath,
          options: templates.filenames,
          value: guide.template,
          instructions: 'Load a template found in your <strong>{path}</strong> directory.'|t('guide', { path: settings.templatePath }),
        }) }}
      </div>
      <div slot="components">
        <p>list of components</p>
      </div>
      <div slot="images">
        <p>list of images</p>
      </div>
      <div slot="guides">
        <p>list of guides</p>
      </div>
      <div slot="snippets">
        <p>list of snippets</p>
      </div>
      <div slot="editor">
        {{ codeEditor.textareaField({
          label: 'Content'|t('guide'),
          instructions: 'Write in Markdown, HTML, and Twig. If Render Markdown is disabled, wrap Markdown code in <strong class="guide-select-string">{% apply markdown(\'gfm\') %}</strong>'|t('guide'),
          id: 'contentEditor',
          name: "contentEditor",
          placeholder: '',
          value: guide.content ?? '',
          rows: 20,
        }, "content-editor", {
          language: "twig",
          theme: "vs-dark",
        }) }}
      </div>

      <div class="guide-tab-icon" slot="icon-components">{{ svg('@appicons/icons.svg')|raw }}</div>
      <div class="guide-tab-icon" slot="icon-images">{{ svg('@appicons/image.svg')|raw }}</div>
      <div class="guide-tab-icon" slot="icon-guides">{{ svg('@appicons/book.svg')|raw }}</div>
      <div class="guide-tab-icon" slot="icon-settings">{{ svg('@appicons/gear.svg')|raw }}</div>
      <div class="guide-tab-icon" slot="icon-snippets">{{ svg('@appicons/code.svg')|raw }}</div>
    </guide-editor>
  </div>

  {% if proEdition and settings.enableGuideCss %}
    <div id="css" class="hidden">
      {{ codeEditor.textareaField({
        label: 'CSS'|t('guide'),
        instructions: "ddddd"|t('guide'),
        id: 'contentCss',
        name: "contentCss",
        placeholder: '',
        value: guide.contentCss,
        rows: 20,
      }, "css-editor", {
        language: "css",
        theme: "vs-dark",
      }) }}
    </div>
  {% else %}
    <input type="hidden" name="contentCss" value="{{ guide.contentCss }}" />
  {% endif %}

  {% if proEdition and settings.enableGuideJavascript %}
    <div id="javascript" class="hidden">
      {{ codeEditor.textareaField({
        label: 'JavaScript'|t('guide'),
        instructions: "xxxxx"|t('guide'),
        id: 'contentJavascript',
        name: "contentJavascript",
        placeholder: '',
        value: guide.contentJavascript,
        rows: 20,
      }, "javascript-editor", {
        language: "javascript",
        theme: "vs-dark",
      }) }}
    </div>
  {% else %}
    <input type="hidden" name="contentJavascript" value="{{ guide.contentJavascript }}" />
  {% endif %}
{% endset %}