{# /**
 * Guide plugin for Craft CMS
 *
 * Guide Edit Page
 *
 * @author    Will Browar
 * @copyright Copyright (c) 2019 Will Browar
 * @link      https://wbrowar.com
 * @package   Guide
 * @since     2.0.0
 */ #}

{% extends "_layouts/cp" %}
{% import "_includes/forms" as forms %}
{% import "codeeditor/codeEditor" as codeEditor %}

{# The title of this CP section #}
{% set title = title ?? "Guide Edit"|t('guide') %}

{# The selected CP subnav item #}
{% set selectedSubnavItem = 'list' %}

{% if not (guide is defined) %}
  {% if (guideId ?? false) %}
    {% set guide = craft.guide.getOne({ id: guideId }) %}
    {% set isNew = false %}
  {% else %}
    {% set title = "New Guide"|t('guide') %}
    {% set guide = craft.guide.getAll([], 'new') %}
    {% set isNew = true %}
  {% endif %}
{% endif %}

{% set cpTrigger = craft.app.config.general.cpTrigger %}
{% set fullPageForm = true %}

{% set tabs = {
  "content": {label: "Content"|t('guide'), url: "#guide"},
} %}
{% if proEdition %}
  {% set tabs = tabs|merge({
    "css": {label: "CSS"|t('guide'), url: "#css"},
    "javascript": {label: "JavaScript"|t('guide'), url: "#javascript"},
  }) %}
{% endif %}

{% set fullPageForm = true %}

{% block actionButton %}
  <input class="btn submit" type="submit" value="Save">
{% endblock %}

{% set content %}
  {% set guideData = {
    content: guide.content ?? '',
    contentSource: guide.contentSource ?? 'field',
    contentUrl: guide.contentUrl ?? '',
    id: guide.id ?? -1,
    slug: guide.slug ?? '',
    summary: guide.summary ?? '',
    template: guide.template ?? '__none__',
    title: guide.title ?? '',
  } %}






  <input type="hidden" name="action" value="guide/guide/save-guide" />
  <input type="hidden" name="authorId" value="{{ guide.authorId ?? currentUser.id }}" />
{#  <input type="hidden" name="content" :value="editorContent" />#}

  {% if guideId ?? false %}
    <input type="hidden" name="id" value="{{ guideId }}" />
  {% endif %}

  {% set redirect = craft.app.request.param('return') ?? false ? craft.app.request.param('return') : null %}
  {% if redirect ?? false %}
    <input type="hidden" name="redirect" value="{{ redirect }}" />
  {% endif %}

  <div id="guide" class="guide-editor">
    <guide-editor>
      <div slot="settings">
        {{ forms.textField({
          label: 'Title'|t('guide'),
          id: 'title',
          name: 'title',
          required: true,
          value: guide.title,
        }) }}

        {{ forms.textField({
          label: 'Slug'|t('guide'),
          id: 'slug',
          name: 'slug',
          required: true,
          value: guide.slug,
          instructions: 'Used to import one guide into another.'|t('guide'),
        }) }}

        {{ forms.textField({
          label: 'Summary'|t('guide'),
          id: 'summary',
          name: 'summary',
          value: guide.summary,
          instructions: 'An internal note about how this guide is used.'|t('guide'),
        }) }}

        {% if proEdition %}
          {% set options = [
            { label: 'Code Editor'|t('guide'), value: 'field' },
            { label: 'Twig Template'|t('guide'), value: 'template' },
            { label: 'External Page (iframe)'|t('guide'), value: 'iframe' },
          ] %}
          {{ forms.selectField({
            label: 'Content Source'|t('guide'),
            id: 'contentSource',
            name: 'contentSource',
            options: options,
            value: guide.contentSource,
            instructions: ''|t('guide'),
          }) }}

          {{ forms.lightswitchField({
            label: 'Render Markdown'|t('guide'),
            id: 'renderMarkdown',
            name: 'renderMarkdown',
            options: options,
            on: guide.renderMarkdown ?? settings.defaultParser == 'markdown',
            instructions: ''|t('guide'),
          }) }}
        {% else %}
          <input type="hidden" id="contentSource" name="contentSource" value="template" />
          <input type="hidden" id="renderMarkdown" name="renderMarkdown" value="0" />
        {% endif %}


        <p>field: content source</p>
        <p>field: parser (when content source is set to code editor)</p>
        <p>field: template (when content source is set to template)</p>
        <p>field: page url (when content source is set to iframe)</p>
        <p>field: summary</p>
      </div>
      <div slot="components">
        <p>list of components</p>
      </div>
      <div slot="images">
        <p>list of images</p>
      </div>
      <div slot="guides">
        <p>list of guides</p>
      </div>
      <div slot="snippets">
        <p>list of snippets</p>
      </div>
      <div slot="editor">
        {{ codeEditor.textareaField({
          label: 'Content'|t('guide'),
          instructions: 'Write in Markdown, HTML, and Twig. If Render Markdown is disabled, wrap Markdown code in <strong class="guide-select-string">{% apply markdown(\'gfm\') %}</strong>'|t('guide'),
          id: 'contentEditor',
          name: "contentEditor",
          placeholder: '',
          value: guide.content ?? '',
          rows: 20,
        }, "content-editor", {
          language: "twig",
          theme: "vs-dark",
        }) }}
      </div>
    </guide-editor>
  </div>

  {% if proEdition %}
  <div id="css" class="hidden">
    {{ codeEditor.textareaField({
      label: 'CSS'|t('guide'),
      instructions: "ddddd"|t('guide'),
      id: 'cssEditor',
      name: "cssEditor",
      placeholder: '',
      value: '',
      rows: 20,
    }, "css-editor", {
      language: "css",
      theme: "vs-dark",
    }) }}
  </div>

  <div id="javascript" class="hidden">
    {{ codeEditor.textareaField({
      label: 'JavaScript'|t('guide'),
      instructions: "xxxxx"|t('guide'),
      id: 'javascriptEditor',
      name: "javascriptEditor",
      placeholder: '',
      value: '',
      rows: 20,
    }, "javascript-editor", {
      language: "javascript",
      theme: "vs-dark",
    }) }}
  </div>
  {% else %}
    <input type="hidden" name="css" value="" />
    <input type="hidden" name="javascript" value="" />
  {% endif %}
{% endset %}